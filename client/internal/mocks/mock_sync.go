// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GophKeeper/api/proto (interfaces: SyncServiceClient)

// Package mock_proto is a generated GoMock package.
package mocks

import (
        context "context"
        reflect "reflect"

        proto "github.com/GophKeeper/api/proto"
        gomock "github.com/golang/mock/gomock"
        grpc "google.golang.org/grpc"
        emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// MockSyncServiceClient is a mock of SyncServiceClient interface.
type MockSyncServiceClient struct {
        ctrl     *gomock.Controller
        recorder *MockSyncServiceClientMockRecorder
}

// MockSyncServiceClientMockRecorder is the mock recorder for MockSyncServiceClient.
type MockSyncServiceClientMockRecorder struct {
        mock *MockSyncServiceClient
}

// NewMockSyncServiceClient creates a new mock instance.
func NewMockSyncServiceClient(ctrl *gomock.Controller) *MockSyncServiceClient {
        mock := &MockSyncServiceClient{ctrl: ctrl}
        mock.recorder = &MockSyncServiceClientMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSyncServiceClient) EXPECT() *MockSyncServiceClientMockRecorder {
        return m.recorder
}

// ListBankCard mocks base method.
func (m *MockSyncServiceClient) ListBankCard(arg0 context.Context, arg1 *emptypb.Empty, arg2 ...grpc.CallOption) (*proto.BankCardResponse, error) { 
        m.ctrl.T.Helper()
        varargs := []interface{}{arg0, arg1}
        for _, a := range arg2 {
                varargs = append(varargs, a)
        }
        ret := m.ctrl.Call(m, "ListBankCard", varargs...)
        ret0, _ := ret[0].(*proto.BankCardResponse)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// ListBankCard indicates an expected call of ListBankCard.
func (mr *MockSyncServiceClientMockRecorder) ListBankCard(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        varargs := append([]interface{}{arg0, arg1}, arg2...)
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBankCard", reflect.TypeOf((*MockSyncServiceClient)(nil).ListBankCard), varargs...)
}

// ListFile mocks base method.
func (m *MockSyncServiceClient) ListFile(arg0 context.Context, arg1 *emptypb.Empty, arg2 ...grpc.CallOption) (*proto.FileResponse, error) {
        m.ctrl.T.Helper()
        varargs := []interface{}{arg0, arg1}
        for _, a := range arg2 {
                varargs = append(varargs, a)
        }
        ret := m.ctrl.Call(m, "ListFile", varargs...)
        ret0, _ := ret[0].(*proto.FileResponse)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// ListFile indicates an expected call of ListFile.
func (mr *MockSyncServiceClientMockRecorder) ListFile(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        varargs := append([]interface{}{arg0, arg1}, arg2...)
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListFile", reflect.TypeOf((*MockSyncServiceClient)(nil).ListFile), varargs...)       
}

// ListLoginData mocks base method.
func (m *MockSyncServiceClient) ListLoginData(arg0 context.Context, arg1 *emptypb.Empty, arg2 ...grpc.CallOption) (*proto.LoginDataResponse, error) {
        m.ctrl.T.Helper()
        varargs := []interface{}{arg0, arg1}
        for _, a := range arg2 {
                varargs = append(varargs, a)
        }
        ret := m.ctrl.Call(m, "ListLoginData", varargs...)
        ret0, _ := ret[0].(*proto.LoginDataResponse)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// ListLoginData indicates an expected call of ListLoginData.
func (mr *MockSyncServiceClientMockRecorder) ListLoginData(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        varargs := append([]interface{}{arg0, arg1}, arg2...)
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLoginData", reflect.TypeOf((*MockSyncServiceClient)(nil).ListLoginData), varargs...)
}

// ListText mocks base method.
func (m *MockSyncServiceClient) ListText(arg0 context.Context, arg1 *emptypb.Empty, arg2 ...grpc.CallOption) (*proto.TextResponse, error) {
        m.ctrl.T.Helper()
        varargs := []interface{}{arg0, arg1}
        for _, a := range arg2 {
                varargs = append(varargs, a)
        }
        ret := m.ctrl.Call(m, "ListText", varargs...)
        ret0, _ := ret[0].(*proto.TextResponse)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// ListText indicates an expected call of ListText.
func (mr *MockSyncServiceClientMockRecorder) ListText(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        varargs := append([]interface{}{arg0, arg1}, arg2...)
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListText", reflect.TypeOf((*MockSyncServiceClient)(nil).ListText), varargs...)       
}