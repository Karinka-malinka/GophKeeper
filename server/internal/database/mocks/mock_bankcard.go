// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GophKeeper/server/internal/app/bankcard (interfaces: IBankCardDataStore)

// Package mock_bankcard is a generated GoMock package.
package mocks

import (
        context "context"
        reflect "reflect"

        bankcard "github.com/GophKeeper/server/internal/app/bankcard"
        gomock "github.com/golang/mock/gomock"
)

// MockIBankCardDataStore is a mock of IBankCardDataStore interface.
type MockIBankCardDataStore struct {
        ctrl     *gomock.Controller
        recorder *MockIBankCardDataStoreMockRecorder
}

// MockIBankCardDataStoreMockRecorder is the mock recorder for MockIBankCardDataStore.
type MockIBankCardDataStoreMockRecorder struct {
        mock *MockIBankCardDataStore
}

// NewMockIBankCardDataStore creates a new mock instance.
func NewMockIBankCardDataStore(ctrl *gomock.Controller) *MockIBankCardDataStore {
        mock := &MockIBankCardDataStore{ctrl: ctrl}
        mock.recorder = &MockIBankCardDataStoreMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBankCardDataStore) EXPECT() *MockIBankCardDataStoreMockRecorder {
        return m.recorder
}

// Create mocks base method.
func (m *MockIBankCardDataStore) Create(arg0 context.Context, arg1 bankcard.BankCardData) error {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "Create", arg0, arg1)
        ret0, _ := ret[0].(error)
        return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIBankCardDataStoreMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIBankCardDataStore)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockIBankCardDataStore) Delete(arg0 context.Context, arg1 []byte) error {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "Delete", arg0, arg1)
        ret0, _ := ret[0].(error)
        return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIBankCardDataStoreMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIBankCardDataStore)(nil).Delete), arg0, arg1)
}

// GetList mocks base method.
func (m *MockIBankCardDataStore) GetList(arg0 context.Context, arg1 string) ([]bankcard.BankCardData, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "GetList", arg0, arg1)
        ret0, _ := ret[0].([]bankcard.BankCardData)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// GetList indicates an expected call of GetList.
func (mr *MockIBankCardDataStoreMockRecorder) GetList(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetList", reflect.TypeOf((*MockIBankCardDataStore)(nil).GetList), arg0, arg1)
}