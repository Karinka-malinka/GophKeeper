// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GophKeeper/server/internal/app/filedata (interfaces: IFileDataStore)

// Package mock_filedata is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	filedata "github.com/GophKeeper/server/internal/app/filedata"
	gomock "github.com/golang/mock/gomock"
)

// MockIFileDataStore is a mock of IFileDataStore interface.
type MockIFileDataStore struct {
	ctrl     *gomock.Controller
	recorder *MockIFileDataStoreMockRecorder
}

// MockIFileDataStoreMockRecorder is the mock recorder for MockIFileDataStore.
type MockIFileDataStoreMockRecorder struct {
	mock *MockIFileDataStore
}

// NewMockIFileDataStore creates a new mock instance.
func NewMockIFileDataStore(ctrl *gomock.Controller) *MockIFileDataStore {
	mock := &MockIFileDataStore{ctrl: ctrl}
	mock.recorder = &MockIFileDataStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIFileDataStore) EXPECT() *MockIFileDataStoreMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIFileDataStore) Create(arg0 context.Context, arg1 filedata.FileData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIFileDataStoreMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIFileDataStore)(nil).Create), arg0, arg1)
}

// Delete mocks base method.
func (m *MockIFileDataStore) Delete(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockIFileDataStoreMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIFileDataStore)(nil).Delete), arg0, arg1)
}

// GetFile mocks base method.
func (m *MockIFileDataStore) GetFile(arg0 context.Context, arg1 string) (*filedata.FileData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFile", arg0, arg1)
	ret0, _ := ret[0].(*filedata.FileData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFile indicates an expected call of GetFile.
func (mr *MockIFileDataStoreMockRecorder) GetFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockIFileDataStore)(nil).GetFile), arg0, arg1)
}

// GetList mocks base method.
func (m *MockIFileDataStore) GetList(arg0 context.Context, arg1 string) ([]filedata.FileData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetList", arg0, arg1)
	ret0, _ := ret[0].([]filedata.FileData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetList indicates an expected call of GetList.
func (mr *MockIFileDataStoreMockRecorder) GetList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetList", reflect.TypeOf((*MockIFileDataStore)(nil).GetList), arg0, arg1)
}
